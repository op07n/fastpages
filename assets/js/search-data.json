{
  
    
        "post0": {
            "title": "How to use curl to download videos from hydrax servers.",
            "content": "How to use curl to download videos from hydrax servers. . I’ve seen this kind of videos in sites like https://kissanime.ru/ o https://ww2.0123movie.net/ . Probably there are a lot more. . My chrome extension to do this, “Video Download Helper”, is not working in these cases. When I used it, give me the url that is not allowed for uploading the video. So, one way to do this is to use the Chrome browser developer tools. While the movie is being played in the developer tools, the url from the stream seems to grow more than the others. Therefore, when we request more information about this link, we get the url of the host and referrer. This is all we need to use curl. . For example, if the url host is https://hbxc9pbqqw.xyz/ and the referer is https://playhydrax.com/?v=vD2ss7KTB then one of the ways to use curl can be as follows: . curl -L -o filenametosave -C - -k –referer https://playhydrax.com/?v=vD2ss7KTB https://hbxc9pbqqw.xyz/ .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/07/01/How-to-use-curl-to-download-videos-from-hydrax-servers.html",
            "relUrl": "/markdown/2020/07/01/How-to-use-curl-to-download-videos-from-hydrax-servers.html",
            "date": " • Jul 1, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "%pylab inline import scipy import scipy.fftpack import scipy.signal import scipy.io load_path = &quot;/home/jbm/capture_aprs.raw&quot; Fc = 144.375e6 Fs = 250e3 pylab.rcParams[&#39;figure.figsize&#39;] = (15.0, 6.0) . Populating the interactive namespace from numpy and matplotlib . samps = [ 512000, 128000, 1024000, 16000 ] #x = sdr.read_samples(2*sdr.sample_rate) x = np.fromfile(load_path, dtype=&quot;complex64&quot;) figure(figsize=(15,4)) psd(x, Fs=Fs) title(&quot;Raw input&quot;) None . samps = [ 16000, 128000, 512000, 128000 ] N = len(samps) fs, b = scipy.signal.welch(x, fs=Fs, nperseg=1024) fs = scipy.fftpack.fftshift(fs) b = scipy.fftpack.fftshift(b) bl = np.log(b) dbl = diff(bl) None . y = sorted(dbl) [ y[i*len(y)/100] for i in [10, 25, 50, 75, 90] ] . [-0.015214484966499242, -0.0067623277127637493, 0.00031054897998572528, 0.008446068080306901, 0.016065986410019661] . il = 5*len(y)/100 ih = 95*len(y)/100 yp = y[il:ih] my_floor = np.mean(yp) + np.std(yp)*3.0 hits = (np.array(dbl) &gt; my_floor).nonzero()[0]+1 hits = hits[ (hits &gt; len(bl)/10) &amp; (hits &lt; len(bl)*9/10) ] [ f(yp) for f in [ np.mean, np.std] ] . [0.00054897979808226087, 0.0095945428733462488] . # Do some janky RLEish work to find contiguous channels. # There are better numpy-ish ways to do this, but this is legible. runs = [] last_start = None gap_allowed = 2 # Allow some fudge factor here for (h0,h1) in zip(hits[:-1], hits[1:]): if h1 - h0 &lt; gap_allowed: if None == last_start: last_start = h0 else: if None != last_start: runs.append( (last_start, h0) ) last_start = None plot(fs, bl) for h0,h1 in runs: if h1-h0 &gt; 1: axvspan(fs[h0-1], fs[h1+1], color=&quot;red&quot;, alpha=0.2) xlim(fs[len(bl)/10], fs[9*len(bl)/10]) [ ((fs[h0]+fs[h1])/2, (fs[h1]-fs[h0]), fs[h0], fs[h1]) for (h0,h1) in runs if h1-h0 &gt; 1 ] . [(-4638.671875, 488.28125, -4882.8125, -4394.53125), (-2197.265625, 3417.96875, -3906.25, -488.28125), (10253.90625, 488.28125, 10009.765625, 10498.046875), (12573.2421875, 732.421875, 12207.03125, 12939.453125), (14892.578125, 488.28125, 14648.4375, 15136.71875)] . specgram(x[:Fs/2], Fs=Fs, NFFT=1024, noverlap=512) for (h0,h1) in runs: axhspan(-1+2.0*float(h0)/len(bl), -1+2.0*float(h1)/len(bl), color=&quot;grey&quot;, alpha=0.5) None . def extract_channel(f_sample, f_center, f_bw, x): &quot;&quot;&quot;Extract a channel of width f_bw at f_center, from f_sample Returns Fs,y, the new sample rate and an array of complex samples &quot;&quot;&quot; # Cribbing from the GNURadio xlate, we use their block diagram my_state = {} # cheating backchannel for debug # Create a LPF for our target bandwidth n_taps = 100 # XXX Total random shot in the dark r_cutoff = float(f_bw)/f_sample base_lpf = scipy.signal.remez(n_taps, [0, r_cutoff, r_cutoff*2, 0.5], [1,0]) # Shift this LPF up to our center frequency fwT0 = 2.0*np.pi*f_center/f_sample lpf = base_lpf * np.exp(1.0j*fwT0 * np.arange(0, n_taps)) dec_rate = int(f_sample / (2*f_bw)) x_filtered = scipy.signal.lfilter(lpf, 1.0, x) dec_is = np.arange(0, len(x_filtered), dec_rate) y = x_filtered[dec_is] y *= np.exp(-1.0j*fwT0*dec_is) my_state[&quot;n_taps&quot;] = n_taps my_state[&quot;r_cutoff&quot;] = r_cutoff my_state[&quot;lpf&quot;] = lpf my_state[&quot;base_lpf&quot;] = base_lpf my_state[&quot;fwT0&quot;] = fwT0 my_state[&quot;dec_rate&quot;] = dec_rate # my_state[&quot;dec_is&quot;] = dec_is # my_state[&quot;x_filtered&quot;] = x_filtered return f_sample/dec_rate, y, my_state . fs_new, y, extract_state = extract_channel(Fs, 15000, 5000, x) specgram(y[0:100000], Fs=fs_new) fs_new . 10000.0 . del(extract_state) . def decode_quad(x, gain): xp = x[1:] * np.conj(x[:-1]) retval = gain * np.arctan2(np.imag(xp), np.real(xp)) return retval . gain = Fs / (2.0 * np.pi * fs_new) # Cribbed from the gnuradio code w = decode_quad(y, gain) specgram(w[0:100000], Fs=fs_new) # , NFFT=1024, noverlap=1023) #axhline(1200) #axhline(2200) #xlim(1.75, 2) fs_new, min(w), max(w) . (10000.0, -12.499961187501176, 12.499991045392912) . w_out = w[50:-50] * 500.0 w_out -= np.mean(w_out) w_out.astype(&quot;int16&quot;).tofile(&quot;foo.raw&quot;) . specgram(w[50:1000], Fs=fs_new); None .",
            "url": "https://op07n.github.io/fastpages/2020/05/11/RTL-FM-Decode.html",
            "relUrl": "/2020/05/11/RTL-FM-Decode.html",
            "date": " • May 11, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "How Device Fingerprinting Reveals Your Real Identity.",
            "content": "How Device Fingerprinting Reveals Your Real Identity. . Borrowed from: . . There’s a seemingly innocuous piece of data on your phone that actually exposes what you do especially to Google, Apple, Facebook. This is called the device fingerprint. This uniquely identifies your phone to third parties. And likely with your real identity. This is pretty dangerous stuff. And nowadays, this kind of device surveillance will be more rampant in the name of saving lives. . What I want to do is to examine this little data point on your phone. And see how it can be used against you. Stay put now. . A device fingerprint is something available to both iOS and Android. This is a different thing than the browser fingerprint which I talked about in other videos. Because this is specific to a phone. What actually is a device fingerprint?. It’s any piece of data that uniquely identifies a device among all other devices in existence. Is this a specific piece of data. Actually it’s many potential pieces of data which can be combined and some were available in older versions and some are no longer available in Android 10 for example. . Let me just tell you about some of the unique identifiers on your phone: . First we have the Google ID and Apple ID. Now these are typically attached to financial information such as credit cards so they have a one-to-one match with a real identity. For those would Apple pay and other financial services it locks your phone into a fixed identity. . Another identifier on your phone is the IMEI. This is the cell modem unique equipment identifier and this can be retrieved by the OS of course and any app that has telephony permissions. So any app that has access to phone data and messages can access the IMEI. . Another piece of data that is unique is that notification token. When your device receives notifications it creates a unique ID called a token which is available to all apps that handle notifications. This is easily retrieved since most apps have notifications. This is a very important part of Google GCM messaging or now firebase and there’s a lot of telemetry associated with this. . And of course there’s an Apple equivalent to this called an APN. . There are other identifiers that may not always be available such as the device serial number .Some of these pieces of device data become part of the metadata in a photo. So if you upload a photo to Facebook some of this data is included in the exif metadata, which also includes locations. . Then, there are other network unique identifiers which are not normally visible to apps, such as the MAC address. But nowadays, this is available to any app that uses the network. There’s a Wi-Fi MAC address any Bluetooth MAC address . And finally, something that is actually sent by the device outside of the phone by default is your IP address, something we already know and on browsers. A device info identifier called the device user data. That is a major part of browser fingerprinting. . Now it’s bad enough that there are all these unique identifiers on the phone, but to make it even worse some of these are combined. So if a third party doesn’t have current access to one identifier they can correlate to another identifier if it matched in the past if they happen to be able to catch more than one data point at any one time so if any of the above data points are identified what another data point you now have a data pair that can be used to index each other for example a Google ID can be combined with a notification ID so next time all they need is a notification ID and they can derive the Google ID an IMEI can be combined with a notification ID a Google ID can be combined with a MAC address again if you have a MAC address then you can guess what the Google ID is this is part the sinister aspect of native apps platforms and device manufacturers this type of tracking can easily be used to identify you and often without your permission. . Just an example of what one could do with this this could be used to generate a social distancing data so we can identify individuals by name not practicing social distancing. This is available to Apple and Google by identifying a device fingerprint together with their 24/7 location data. But this is a saving lives kind of application, right. Well, some things are more sinister, for example, every person can be classified according to their religious beliefs like converging on churches on Sundays. Or your health based on who visited oncology clinics or AIDS clinics. Or your sexual preferences, by who was at a gay bar or the strep bar. Or who was at a protest. . Again, in case you missed, it standard iOS and Android phones have an Apple ID and Google ID respectively, which point to your credit card with your real name and your home location . Obviously, Apple and Google know where the phone is at any one time. This is an insidious threat and it truly bothers me completely. With those goes another feature called Wi-Fi scanning. It can pinpoint your movements historically. Again I want to make this clear. With Google ID and Apple ID your phones are completely identified with your real name or your family’s account. And this is together with whatever behavior is already tracked like locations apps used and websites visited. . So, without the proper consideration of device fingerprinting an attempt at pseudo anonymity in social media may not work. For example, what happens if you set up multiple Gmail accounts on the same phone ? Obviously Google will know the owner of these email accounts even without a real name. Because they will be connected by a device fingerprint. If you try to use multiple Facebook accounts you will be spotted immediately. In fact, on any platform where you set up multiple accounts you can be easily identified. . This matters whenever you’re trying to create non real name identities on social media. You may be wasting your time if you’re not aware of this. So for example, it is clear to a single platform owner such as Facebook what your whatsapp account is, or your Instagram account. Because of the device fingerprint. Later on, I’ll tell you how to beat this. . Now, here’s an interesting fact point for you. Many of these data points are available to native apps only. This means that some of these identifiers are not available to a web app or browser. For example, it is a well-known fact that Facebook captures your MAC address as one of its unique identifiers it also captures the MAC addresses of everyone on your network to do relationship tracking. But it requires the app. If you use a browser it can’t get access to this data. So one of the ways to stump Facebook is to never install the app. . Native apps can retrieve the IMEI of the phone, the cell modem unique ID. But browsers can’t see this. There’s another thing that native apps can’t see and that’s the Google ID and Apple ID. Browsers don’t see that directly. You have to log in separately to their platforms. Of course, they make it simple now to identify yourself to each platform using something that will match your phone ID. Many apps offer a Facebook and Google sign-in. And now, Apple is requiring that these apps also now include Apple sign-in. These are instead of logging into the apps using your own login to the platform. They call this frictionless logins. But they are also frictionless spying since your * * into giving out multiple pieces of information at once. . By having multiple apps identify with a Google ID, Facebook ID or Apple ID. Even ad trackers can associate your profile with a real identity while having the platform verify that you’re on the same device. . I hope you’re seeing that there’s a problem here. The moment you use an iOS phone an Android phone and one of the popular apps with various ad trackers like Facebook and many apps with Google ads on it, then you’re basically chipped every move you make is now the property of various third parties. And to repeat, this is with some way to reference your real name. . Okay. Now let’s talk about how we can beat this. It’s not easy. It means making some hard choices when it comes to convenience. First, how do we eliminate the connection to our real name with Google ID and Apple ID? Well, this is simple don’t have an iOS phone or a Google Android phone. If you don’t have a Google or Apple account on the phone, then the data will not be available. Let’s say you use a Linux phone like Ubuntu touch either on a Pine phone or a Nexus 5. Or let’s say you’re running a Libero 5. These devices have no Google ID or Apple ID, so that will result in no identifiers sent to those platforms. . Next, 24/7 location tracking is done by Wi-Fi scanning which sent the data non-stop to Apple and Google servers. Again a non iOS or non Google phone can’t do this. And fortunately there’s another alternative ad googled AOSP Android does not have this kind of Wi-Fi scanning so this data leak will stop. . If you use web apps meaning use browser-based apps the device identifier will be limited. Web apps can do browser fingerprinting but that does not reveal a real identity just an indication that you’ve been seen before. So the less app you load from a Google Play Store the less risk of getting device serial numbers and things. So web apps also use a different notification token than a native app. So they don’t cross over. . So web apps are safer. A specific thing with Android 10. If you use de-googled Android 10, some data points are no longer easily retrieved by an app such as a serial number. Android 10 also does MAC address spoofing, so it also gives information on that front as well. . Again with Android AOSP de-googled there is no identity. In fact your identity on de-googled AOSP phone like the ones i sell on my store, you share with so many phones. It’s called spoofing, identity spoofing. So your information becomes disinformation, and since you’ve never logged into a Google phone there is nothing to tie it to a real identity. . The main reason for speaking about device fingerprints is that some people think they’re hiding by using multiple accounts on different platforms. But as you can see, if this is not well thought out, it can nullify your actions. . Second, it also tells you that as a general rule, found reveal much more information about you than computers. And if given a choice, you should think about separating identities by device, rather than just by accounts. Or by using a computer instead. . Third, the device choice matters. It matters a lot. Linux phones and de-googled AOSP Android phones do not leak the same data as your standard iOS or Android phone, or some new flagship from Apple, Samsung, LG, Google and others. . There’s a lot more about this. I can only give you an overview in a short video. When you start planning on a general security plan before you jump into setting up multiple email accounts for example, because I recommend that, you will need to examine your threats and plan to deprive that threat of data. . Now let’s briefly compare the difference between browser fingerprinting and device fingerprinting. Device fingerprinting is a capability of native app store apps only. You can beat browser fingerprinting by having multiple browsers. You cannot beat device fingerprinting on a single device, except to have a device that does not send a device fingerprint or creates a fake one. . But to me, the worst aspect of device fingerprinting is that it is matched to a real identity into location tracking. So, yes, you won’t be able to contribute data for social distancing. . If you follow my tips, sorry about that Apple and Google. If this video has been helpful to you you might want to subscribe to this channel you get more tools to protect yourself and slam on that notification Bell thank you for watching. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/05/09/How-Device-Fingerprinting-Reveals-Your-Real-Identity.html",
            "relUrl": "/markdown/2020/05/09/How-Device-Fingerprinting-Reveals-Your-Real-Identity.html",
            "date": " • May 9, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "How to Learn Morse Code.",
            "content": "Morse code tree . Borrowed from https://matrix207.github.io/2014/06/24/how-to-learn-morse-code . From http://www.wikihow.com/Learn-Morse-Code . See also: . . The Morse Code was developed by Samuel F.B. Morse in 1844. Even after more than 160 years, it is still used today, especially by amateur radio operators. The code can be sent quickly over the telegraph, and is also useful for emergency signaling (SOS) with a radio, mirror, or flashlight, and even for people with severe disabilities to communicate. In order to master Morse code, however, you need to approach it like a new language. . Step 1 . Listen carefully to slow morse code recordings. What you’re listening for is a combination of dots and dashes (also referred to as dits and dahs). A dit is a short beep, while a dah is a longer beep (three times longer). Every letter is separated by a short pause, and every word is separated by a longer pause (three times longer). . You can search or shop for practice recordings, or use a shortwave receiver to listen to the real thing. Free and inexpensive Morse training software is available and usually better than the recordings, it can be set to change the text randomly so it never gets “stale” and you can choose whatever learning method works best for you. Never count dots and dashes, learn the sound of the letter. If you are using Farnsworth, you set the spacing between letters slower than the letter speed. Choose a letter speed a bit above your target code speed and never lower the letter speed, only the letter spacing. This is the way to learn Morse as a language, 15-25 words per minute or more. The following methods are best used when you have no intention of using Morse above 5 words per minute, they will require you to un learn the bad habits and start over. | . Step 2 . Refer to a copy of the Morse Code alphabet (as seen at the bottom of the page). You can use a basic chart such as the one shown at right (click to enlarge), or you can use a more advanced chart which includes punctuation, abbreviated phrases, prosigns and Q Codes.1 Match up what you heard to the letters in the alphabet. What does it say? Were you correct? . Some people find it easier to learn by writing down the letter with dots/periods and dashes, and comparing it to a chart such as the one shown; others say this creates an additional step that will only slow you down in learning Morse code. Do whatever feels more comfortable for you. If you choose to avoid interpreting written dots and dashes, you can use a pronunciation chart which lists the sounds of the Morse Code signals, as if you were hearing them, rather than the dash and dot symbols.2 . Step 3 . Sound it out. Practice translating basic words and sentences into Morse code. In the beginning, you can write it down, then sound it out, but eventually you’ll need to go straight to sounding it out. For example, the word “cat”. Write it down: . -.-. .- - . then transmit the word (you can use the buttons on a mobile phone, or beep vocally – the latter will probably help your mind pick up the code faster). To pronounce morse code, dit is pronounced di with a short i sound and a silent t. Dah is pronounced with a short a sound. So cat is pronounced dah-di-dah-di di-dah dah. Once you feel comfortable with that, pick up a children’s book and try to transmit the content in Morse code without writing anything down. Record yourself and play it back later to see if you were correct. . Be conscious of your spacing. Each letter needs to be separated by a space that’s the same duration as a dah (three times the duration of a dit). Each word needs to be separated by a space that lasts about seven times the duration of a dit. The better your spacing, the easier your code will be to understand. | . Step 4 . Memorize the easiest letters first.3 A single dah is a “T” and a single dit is an “E”. Next, a dah-dah is an “M” and a dit-dit is an “I”. Memorize the letters for 3 and 4 dits and dahs in a row. Once you’ve got those down, start memorizing the combinations: dit-dah, dit-dah-dah, dit-dah-dah-dah, and so on. Leave the more complex combinations for last. Fortunately, this includes some less commonly used letters (like Q, Y, X, and V) so when you get to this point, focus on the more commonly used letters first. Notice how E and T have the shortest symbols, and how K, Z, Q, and X have long symbols. . Step 5 . Make associations. For every letter, think of a memorable “sound alike”. Here’s an example: The letter “C” is dah-dit-dah-dit (long short long short). Can you think of a word that starts with that letter, and sounds like the Morse pronunciation? How about catastrophic, which has an emphasis on the first and third syllable, and begins with a “c”? Or how about dah-dit, which is Morse code for “N”? How about nanny? This will be harder for words that end in several “dahs” in a row, since many words in the English language alternate emphasis between syllables, and usually do not end with an emphasis, but you could use sentences, too. There are also existing Morse code mnemonics that have been around for many years; you might be able to find them online, or purchase them.4 . If you’re a music lover, you can try associating Morse code pronunciations with tunes or melodies that are familiar with you. For example, the distinctive beginning of Beethoven’s Symphony No. 5 is short-short-short-long, or dit-dit-dit-dah, which is the letter “V”, the roman numeral for “5” (as in Beethoven’s 5th Symphony), and is rather appropriate for such a “victorious” tune, don’t you think? During WW2, BBC broadcasters used this four-note melody to start off its radio broadcasts because of its association with the word “victory”! 5 | . Step 6 . Have fun with it. Want to get your friends into it? Learn how to blink code. That way, you can give an SOS blink when your friend just introduced you to a rather unpleasant blind date, for instance. Use written Morse code to write secret notes, or keep a diary in Morse, or tell dirty jokes without anyone knowing. Give someone a Morse code greeting card. Say “I love you” in Morse code (how romantic!). Whatever floats your boat, find a way to do it in Morse code, and you’ll learn it much faster. . Reference . 1 | 2 | 3 | 4 | 5 | . Other . online translate | .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/05/09/How-to-Learn-Morse-Code.html",
            "relUrl": "/markdown/2020/05/09/How-to-Learn-Morse-Code.html",
            "date": " • May 9, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "READ A BOOK IN A DAY",
            "content": "READ A BOOK IN A DAY (how to speed-read and remember it all) . Borrowed from: . . 1. Intent (have a strong intent and motivation to read) . Tip number one: Intent you gotta want to do this right. I’m not forcing you to read any books. But if you do want to, then just do it. Just do it seriously. Just do it. I wanted to read a book in a day. I said, tomorrow on the train ride home I have three hours allotted to sit down do whatever I want. I’m gonna dedicate that to reading a book. Now, obviously you have so many hours in a day. If I’m telling you: you can read a book like this in four hours if you learn how to read a little bit quicker. That’s still four hours of your day. Right where are you getting four hours from. Well you can make time for that, right. Think about. It’s really only eight thirty minute blocks. If you really wanted to, and this is what it comes down to you could not look at your phone you could not swipe through Instagram or post on Facebook or whatever that’s probably gonna save you those four hours in a day. Make sure that you also choose a book that you’re interested in. Don’t make it something that you’re forcing yourself to read. And then, also ask yourself the question: why am i doing this? If you don’t have an answer, then maybe you shouldn’t do it. Find that reason to, kind of, build into your intent. So that it makes the process of reading this book a lot more enjoyable. And you’re naturally gonna be reading it a little bit faster. Because you’re devouring it. Because of that reason that makes you want to do it. Okay that’s enough of that. Alright it goes without saying that. . 2. Block out distractions . Tip number two or step number two, is to turn off any distractions. Right, so it’s very easy to get distracted obviously in this day and age. So anything that you think will distract you from keeping focused on your book turn it off. Put it away. Get it out of sight. . For me, on my train ride, I turned my phone on silent. I actually, turned it off and put it in my back pocket. Was not gonna be a problem. It was not gonna distract me one goal in mind. I was gonna do it. . 3. Don’t read all the words — read from your peripheral vision . The next tip is to work on increasing your peripheral vision. So if you think about it, when you read, you know obviously you’re reading a line. It’s very tempting to think that you read from the left side of the page to the right side of the page. Literally from end to end. But we don’t actually do that. Our eyes jump around and we actually can see things that are not directly in our slide of sight. If you look directly at my finger you can actually see what’s here and here. Maybe not perfectly, but you can get the sense of it. And if we can do that when we read, you’re gonna cut out words that you actually need to look at in process. And that’s obviously gonna cut down on your reading time. Because there’s less words you need to read. . So a tip to do that I didn’t come up with this, but I’ve seen this in numerous places: Start with the first few pages, take a ruler and draw a line a vertical line on either sides of the margin. About one or two words in. Okay, see that, and then what you’re gonna try to do is read for a few pages. Maybe for five to six pages by only reading in between those margins. Okay so technically I’m cutting out two to three words on either side and focusing only on the middle part. Not to say that you’re ignoring those words, you can still read them. But you don’t have to actually read them. And what you’ll find is, after a few pages, you don’t have to do that for every single page. But you’ll naturally find yourself, just limiting yourself to that specific range, you can even narrow that range to. And get better at literally looking at a very small portion of the page. Sounds crazy, but it actually works all right. . 4. Don’t backtrack — point with index finger to guide yourself . This tip is to eliminate going back. So when I used to read or sometimes when I do when I’m really tired I’ll read something. But I find myself going back to that same line or even in that same paragraph, because my eyes are all over the place. That is wasting time, and I’m not gonna get through this book as fast as I want if I keep on doing that. So you want to eliminate as much as you can any backtracking. That means your eyes need to be focused on what you’re looking for and constantly progressing moving forward in the book. No going back. No going back. So one technique that I used to do that is basically pointing, take my index finger. You can use a pen or any kind of sharp singular device. Fingers good. And literally, I just guide myself along with in. That little range that we talked about in the previous tip. And I make myself follow the line down the page no going back now it takes a bit of getting used to. It’s a bit weird to stand there pointing at your book, but you get the hang of it. And, actually, you rely on that finger to guide you through the book. And this can almost dictate how fast you’re pushing yourself. . At first it’s gonna be not so fast. With practice, as you get through the book, you’re gonna find yourself just kind of zipping through the page it looks kind of ridiculous. If anybody is watching you doing that don’t think you’re not even reading. You actually can follow along much better than you think you can. . 5. Visualise everything you’re reading . This step is more up my alley in terms of memory. Is, if you want, to remember what you’re reading. Especially when you’re doing those kind of techniques that I just previously mentioned. You got to visualize. So what I like to do as I’m letting these words, kind of, fill my mind as I zip through them with my guided finger with my narrowed margins. With my intent I try to imagine I’m watching a movie, so everything as I read it kind of plays in my mind. It’s not always perfect. Doesn’t always kind of keep up because I’m going pretty fast, but I try to really imagine what I’m seeing or reading plastered on some kind of cinema screen. Like a movie playing in my mind that makes everything happen almost in real time. As if I were there experiencing it we’re seeing it on a screen which has pictures and color and sound and all that stuff. And you guys all know from watching dozens of my videos, that visualization pictures in the mind is key to remembering anything. Simple as that. . Alright those first five tips are really the majority of what you need to increase your speed and your retention of what you read. . 6. Read for longer . These next five tips are really quick little tips that will help set you up for success to remember better to read faster as well the first one and I found this one really helpful I listen I’d never memorize the book so fast in one session but obviously I had a limit that train ride so . So I was kind of stuck to reading for a long period of time in one sitting. It was actually kind of cool because I was invested in the story I was in it. And you know, I didn’t want to step out and then come back in and revisit everything I wanted everything to be fresh as I read it. So I actually read for an hour non-stop, took a break for a second, then went back for another hour and a bit took a break. And then finished off the rest of the train ride in another session. And I think that’s a great tip to really kind of carry you through the book and to stay motivated and to stay interested is to try longer reading sessions. . 7. Take breaks . This tip is kind of contradictory but a little bit necessary. Is to take breaks. This is a tiresome process you’ll find your mind becoming a bit tired as you do this and your eyes you’re probably not used to that moving so fast but, take a break. I took a break every hour. Seemed to be enough just for a few minutes. Then I got back and I continued on top of that. . 8. Switch locations . You also should try to switch up locations. So I was on the train, so I had my seat, but I actually got up a couple times. I read standing up. I read actually in the back of the train, in between cars. And the reason I did that is because when you’re reading a book a physical book, why am i reading a physical book? Well, because it’s tangible right. I’m somewhere holding this book there’s a memory of that that will help me remember the book reading experience for that book double. The whole point of this I wanted to read a book that I could remember. And that I could remember when I read it. So vary your location when you read it’ll help you remember what you’re actually reading. . 9. Practice — do it . I mean this doing this in itself is practiced right. If you continue reading at this pace with those techniques you’re essentially practicing for the entirety of a book you’re gonna get better by the end of the book and I found that you know first a few like 20 to 30 pages it was a bit uncomfortable. . I felt myself really pushing and I was like: Man, I don’t know if I can carry on with this for the next 2 and 1/2 hours, but turned out after hour one it felt really natural. I felt really good at it, and I felt like I wasn’t missing anything. I felt like I was able to read all this stuff quickly. Absorb it, visualize it all that stuff and it would felt really natural. . 10. Write about it (retrieval / recap) . And finally, you know, this is kind of an after-the-fact kind of tip, but it’ll help you remember what you read for longer: Write it down. Write down a synopsis of what you read. It doesn’t have to be super detailed. You can do it on your phone and Google Drive or literally by hand, or even tell someone about it. Is to just, kind of, recap. What you read just, kind of, the general idea of what you remembered from this book. All those things will help you, kind of, solidify that entire speed reading session of you reading this book from start to finish really quickly in a day. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/05/06/read-a-book-in-a-day.html",
            "relUrl": "/markdown/2020/05/06/read-a-book-in-a-day.html",
            "date": " • May 6, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Is Protonmail Safe for Security and Privacy?",
            "content": "Is Protonmail Safe for Security and Privacy? . Borrowed from: . . The question today is: should you use protonmail?. On my channel I don’t give you obvious answers. . Is it really the most secure and private email you can use?. Likely many of my subscribers use protonmail but we will study this clearly so you understand the risks and benefits of protonmail and compared to emails in general. I have many videos and email and these are largely ignored because they’re not cool topics. It’s all tech. But this lack of interest translates to misunderstanding how email works which can lead to uninformed choices and often the biggest dangers to privacy. Let’s dig in. Deeply. . I have a particularly applicable background we’re talking about protonmail and email in general. That’s because many years back I actually wrote an email client and server similar to protonmail. So I hope my insight is unique because it’s like someone from inside the email platform giving you secrets. First I will tell you right now that I have no protonmail account. I also have no totanota account or startmail account. You might think that’s weird for the internet privacy guy. I’m sure the hated one has one of those email accounts. I’m not going to judge you for having these types of email accounts. In my interview with John McAfee he says that protonmail is CIA and that these platforms offer no security or privacy. That’s his opinion by the way I have no inside information to make the CIA claim. . Edward Snowden by the way used Lavabit. Lavabit shut down in 2013 when the US government demanded access to its private keys because they were trying to access Snowden’s email. It shut down instead of giving up the information. Silent circle another comp offered encrypted email shut down after citing the impossibility of being able to maintain the confidentiality of its customers emails should it be served with government orders. . I shut down my email service around 2014 as well. I wasn’t served with any government orders of any sort. But in actual operation I saw holes even though I was operating the email service with encryption. . First before I start giving you quick answers you have to understand how email works and how you never hear the complete story about claims an email encryption. So I will attempt to make you understand. . The email system is quite old it existed before the internet and it flourished in the early days of the internet it was used heavily when internet access was based on dial-up modems for example. Email is made up of three protocols: SMTP and pop3 were the original protocols and then IMAP was added later. . Usually when we think of these protocols we also remember that when setting up our email we specify port numbers. So the original specifications have these assignments: SMTP port 25, pop3 port 110, IMAP port 143. Now let me explain what these protocols do so you understand how this relates to you setting up email uses SMTP Simple Mail Transfer Protocol receiving emails can be either pop3 or IMAP. The difference between the two is that pop3 means that you store your own messages while when using IMAP the server stores the messages for you. Webmail has to use IMAP because you’re using a browser and are not storing your own messages. If you’re using an email client on your device and you’re using either one most people use IMAP so they can read their messages on multiple devices. So each of you devices will just sync email from the email server. The actual messages are typically stored on the email server. . The email infrastructure consists of two parts: . -First is the interactions you have with your own email server, which is usually a specific domain or set of domains owned by the email provider or company. For example if you have a gmail account this is your interaction with gmail.com. If you have a protonmail account it’s your interaction with protonmail.com. I’m going to go back to your interaction with your own email server later. . -The second interaction is between your email server and other email servers these interactions are known as MTA to MTA. MTA means message transfer agent . So these interactions between gmail.com and yahoo.com or my business.com and outlook.com or protonmail.com an iCloud Kong and so on. Meaning inter-domain email. Because MTA to empty is limited to sending emails, that’s all it does, it uses the SMT protocol and which is assigned to port 25 . . Now, one interesting fact about the SMT protocol port 25 , a very old protocol, is that all the traffic has to be sent in plain text it has to be human readable. If you send an attachment, you have to encode it in base64, which is not encryption. It is easily translated. Base64 allow sending a binary data without corrupting a message since everything is translated to normal text. As someone skilled in hacking, it is quite interesting to be on the same network as an email server and then listening to the traffic on smtp port 25 . Again it is unencrypted so all you have to do is run Wireshark and you can see the plain text traffic coming out of an email server. . I want to make this clear: MTA to MTA traffic on port 25 has to be unencrypted, and in plain text, or the protocol won’t work. Now if you haven’t looked at the format of an email you may also not know that there’s a little trail on there on the top that shows how the message reach the final email server. It will often indicate the machine name of your source computer, the IP address of the sender and the IP address of the email server it connected to. In addition in plain text it shows timestamps and of course the name and email addresses of senders and receivers, the subject line of an email and all the supporting information. I just mentioned are called email headers. And I will generally call email headers as email metadata, and it cannot be encrypted the message body and attachments by default are also not encrypted. . Now you can take special precautions like Snowden did to encrypt the body of the message which is tedious using PGP .It’s tedious because the only way to do it is to exchange keys with everyone you’re dealing with. And that means you can only talk to techie types who understands how to handle PGP . As I mentioned email server to email server or SMTP port 25 traffic is plain text so the governments of the world know this for this reason most definitely the US government and likely many governments collected data on SMTP port 25. This means that there is a high likelihood that some email sent to you over the years, maybe the past 30 years, has been collected and stored. Also depending on where a hackers position on the network a hacker can also intercept this kind of traffic and examine your emails. . So if over the years you’ve sent tax information or a tax return to your accountant, or medical data to your doctor, then be assured that someone else now knows. This, in fact this, is well known in a medical field which was my prior career that HIPAA regulations in the U.S. banned the use of emails for sending medical records. And this is in effect to this day the IRS also does not send messages via email at. All because they must know this. On the other hand, in a strange turn of events, the US State Department apparently uses emails, in a some point someone had private email servers which guaranteed that traffic flowed externally and in plain text over ducting SMTP port 25 . . I’ve often wondered why no one talks about this, or why my videos in this topic are suppressed. And my guess is that it is to the benefit of the intelligence community that all of you use SMTP port 25, so that they can easily collect data even from other departments in the US government. Since most of the traffic off the internet is routed through the US Internet then it should be plain to see that most email in the world is captured by the U.S. three-letter agencies. There will be exceptions and I will discuss those in a moment. . But let me make this statement now so you get this in context. All, all, SMTP port 25 traffic including those from protonmail 210 or Gmail, Yahoo, iCloud, and the US State Department and so on are all exposed. So don’t believe the lie this part of email has always been open. It doesn’t matter which email service you use: a hacker a government, an ISP can read much of your email. Now in case you think lots of people sit there and read your email give me a break. Obviously the email is stored in databases and can be searched later by identifying a specific IP address email address name or keyword. . Now let’s go on to part 2. I skip the interactions you have with your own email server to make this cleaner what happens if you email yourself is that visible to hackers governments and so on this part is very interesting in the old days the only way to talk to your email server was using pop3 port 110 IMAP port 143 and SMTP port 25 these are all plaintext protocols but now they’ve changed this practically all email clients now offer encryption on email traffic through the use of something called TLS which is like HTTP for email so now we have TLS versions of encrypted pop3 which is port 995 encrypted IMAP which is 993 and encrypted SMTP which is 465 but this is limited to your communications with your email provider so today in 2020 likely emails that flow between you and your email provider will be encrypted. . Fortunately this blocks reading of lots of emails on local area networks and large business networks within the network in the case of the US State Department emails within the State Department will be secure except to the people running it emails from the State Department to private email servers will not be secure let’s make this clear your email provider can still read your email incoming or outgoing your email provider can read the mated data showing IP addresses and names but hackers under Lion can no longer capture this data in 2020 the email traffic has been reduced so that the only exposure now is on the email server to email server traffic the MTA to MTA traffic. In other words inter-domain traffic when email providers say their email is encrypted and this includes Gmail,protonmail , tutanota ,startmail and others. . This is the part they’re talking about they don’t mention SMTP port 25 which is the sucking hole. So in a sense they’re not lying to you part of your email interactions is encrypted but not all. Now let’s go further your email provider can read your email it is clear and obvious that Gmail reads your email. They use it to profile you for advertising. Based on the email traffic to your account you will see applicable ads flow wherever you interact on search YouTube and web sites with ads that are based on your Gmail activity. They’re not giving you this service for free they want something back. . Now what about protonmail. Now here’s the potential positive or protonmail. And I’ll be frank, I consider this only a minor positive protonmail claims end-to-end encryption when you’re talking to someone inside the protonmail network which is protonmail to protonmail traffic. And that’s likely true if both sender and receiver are on protonmail, then likely the message body will be encrypted. Now this is where my experience comes in. Like I said earlier, I made my own email service just like protonmail. The difference was that I encrypted over Gmail and your existing email provider. So I didn’t intend to store the emails on my server for the private messages. That way I didn’t have direct access to your messages. But protonmail stores your email on their server. And what that reveals is a lot of metadata especially for your inter domain email. It shows who you’re interacting with their email addresses, time stamps, IP addresses. That metadata can be demanded by governments and less protonmail is already a government plant, in which case, they have a deep database of metadata. . Gmail on the other hand also reads your email. And they can read your email content, which is again scannable for keywords. The difference between the two is that protonmail is a known haven for people with something to hide. So all that metadata is a nice collection of interactions between people who would be on the shortlist for surveillance. Gmail has probably billions of accounts, so the only way to classify you in it is by specific knowledge of your email address, an IP address and keyword. Gmail also has a policy of informing you if there’s a subpoena for your email information. . McAfee , by the way, uses this as a canary warning flag honest email messages. And he’s smart enough to know the limits of what he can put in an email message. So even protonmail is not 100% secure in many ways you can hide in plain sight better on Gmail . So that’s why I recommend jima for unimportant messaging only like social media accounts and unimportant .Gmail to Gmail traffic. . What is more secure than a protonmail then and it’s not tutanota or startmail. Well this is the more complex question but I run my own email server this is more secure than Gmail or protonmail nowadays this is very difficult to do without cybersecurity expertise email servers are constantly hacked and require monitoring. . I run a specially configured Linux server using postfix . Now I can consult for people and how to set this up. It’s it’s time consuming and it’s not cheap, and obviously there’s the monthly cost to run the servers. But this could be good for like a company anyone doing this will be tested on their cybersecurity skills because any mistake will show up with spammers attacking your server and your ISP blocking your SMTP access and you’re getting blacklisted, your entire domain blacklisted. But let me explain the benefits here. First only the one would access to the server can read the emails and two people on the same email domain will be more secure than protonmail, because converting between two accounts on the same server will be encrypted. So if you have a domain mysuckingmail.com and you give a new mysuckingemail that calm account to anyone you want to talk to then all your internal conversations will be private. . Can you still use protonmail? It depends on the importance of the metadata. Since a third party now has the metadata, a relationship map and contact lists can generate connections. It is worrisome. If Snowden use protonmail, it would be a quick check to see all the email addresses he communicated with in their IP addresses and all the timestamps, in size of messages. So if I’m gonna use protonmail it’s going to be pseudo anonymous. I’m not gonna put my real name in there. It’s that important to hide, in the limited cases where you think that it doesn’t matter like an obvious connection between people for example people in the same business then using protonmail among yourselves is probably safe with the use of a VPN. . Now knowing all this what’s the conclusion? In general, any emails from one domain to another domain, is tracked by governments ISPs and advanced hackers. In general, emails within the same domain like Gmail to Gmail, protonmail to protonmail, iCloud to iCloud are safe from external examination. But may be read by the platform provider. In general, emails in encrypted platforms like protonmail will be safe from email reading within the same domain but your metadata will still be there since it’s a format of the SMTP protocol. . If you decide to use something like protonmail, I wouldn’t use it for anything other than protonmail to protonmail communications. I would never advertise. It this way it would have limited metadata. The safest email use is a private email server where your most secret emails are only within the same domain and giving limited access to the server itself to others. Given this, I conclude that email is so unsafe that I use it sparingly. I use it mostly read I would rely on other messaging systems like signal and my own Brax.me platform instead of email. . The reason I dropped email services on Brax.me was that I saw so much metadata it had made the platform dangerous something that silent circle saw themselves. Again they state the impossibility of being able to maintain the confidentiality of its customers emails should it be served with government orders. That’s what they said this is the beauty of a platform by the way like Brax.me. Mean no sucking metadata. You’re never forced to identify yourself, which is why I chose not to support emails on it ever. Use it it’s free. It’s a lot safer than email and it has end-to-end encryption and it’s open source. I’ve several videos on email, by the way. I also have a video of a live hackathon where 10,000 people watched it live and I demonstrated this SMTP port 25 traffic in plaintext. Make sure to watch those videos. I hope you got a good explanation. And subscribe to this channel. Also please follow me on the other video platform library Rob Braxton tech. The link is in the description. Thank you for watching. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/04/17/is-protonmail-safe-for-security-and-privacy.html",
            "relUrl": "/markdown/2020/04/17/is-protonmail-safe-for-security-and-privacy.html",
            "date": " • Apr 17, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "How Whatsapp (and Facebook) will Zuck You.",
            "content": "How Whatsapp (and Facebook) will Zuck You . Borrowed from: . . In my videos have discussed how you shouldn’t be loading apps like WhatsApp or Facebook on your phone. What I’ll do here is explain to you why this is important. Because if you don’t, you will be Zuck, and it’s coming up next. . The popularity of WhatsApp seems to vary by country. With Europe and India leading the pack do these users think WhatsApp is private. The masses are gullible and in this video. I’ll explain the kind of dangers you exposed yourself to when you install WhatsApp on your phone apparently some large chunks of the world population aren’t even aware that WhatsApp is a Facebook property. And of course most people will not read the Facebook End-User License Agreement or EU la which clearly states a lot of the dangers I will be discussing here today. . People flock to WhatsApp because they hear the word encryption. And then assume that it is safe this is an amazing play of disinformation by Zuckerberg. Which he exploits to the fullest to highlight the issue here. I’ll illustrate this with an example of two people. Let’s say a man and a woman having a private and perhaps secretive affair, and both decide that they will use WhatsApp to converse. Send pics hoping they stay under the radar. . So we will investigate what Zuck would know about this relationship. First, when you signup to WhatsApp , you use a phone number and it should be obvious that a phone number identifies you completely. Some here will think you can get away with burner phones and other similar options. You won’t. Next, most people who use WhatsApp will upload their contact lists. Those contacts lists we’ll have real names and phone numbers of people. And this draws not only a connection between a phone number in people’s names, but also what is called a relationship map. . Someone can infer connections based on intersections of contact list then WhatsApp like Facebook tracks unique identifiers on your phone such as the MAC address . Which is a unique serial number on your device that then matches your corresponding Facebook account. It will be the same identifier since it’s the same device your WhatsApp information is tied to Facebook in multiple ways. Your phone number which you use for two-factor authentication on Facebook , your MAC address your device fingerprint in general your IP address and your contact list. . Thus there is a 100% correlation between your identity on WhatsApp and your real name on Facebook . Facebook is a real name site. WhatsApp is not pseudo anonymous in any way. Meaning a fake name is meaningless. . So we’ll start with first conclusion that the main and woman having a liaison are now known by real name. It is also going to be known what times of day they are in touch with. And I would bet there would be a pattern. As well as frequency. I would also bet that if I were Zuck I could find these affairs just by comparing frequent contacts between a man or a women with different locations, different names and different contact list. This my friends is how made it data can be used for blackmail. . Now let’s go further. We already know that these people are not connected by virtue of having separate relatives, separate lives. With occasional intersections of location. Off course Zuckbook will know your political beliefs, religious beliefs, financial status, friends work. Plenty of information here that could be used for blackmail. . It gets worse because of the device fingerprint. Zuckbook also knows most of the websites they visit. Every website or app that has a Facebook like button actually hosts a Facebook tracker that spots your device fingerprint. Then, the next time you log into Facebook or WhatsApp you can send a tracker to Facebook and match your identity to what you have been doing on the internet even if you’re not logged in to Zuckbook . . Since most people are on Zuckbook , and people are posting pics to it all day. Then someone will eventually take your picture even if you’re in the background. And Zuckbook will be able to do facial recognition and tag you. Facebook facial recognition is at least 98 percent accurate. Probably the most accurate in the world. You will not escape. . So if you happen to be at a public restaurant having this Lay’s on, then, a table nearby could take your picture, autotag with location data, and now Zuck knows that you and your date are now seen together and recorded in ZuckBook in perpetuity. . Now, some will say that the conversations are encrypted and so we don’t really know what this man and this woman are talking about. This it’s foolishness. Intelligence agencies know that behavior can be revealed by the made of data, and it is not necessarily you know what’s being said. Intersections of locations at non-business locations and not at home already tell us a lot do these two people work together. The metadata will reveal that is there a pattern of hours to the conversations where there’s an absence of communications at certain times. . Let’s confuse the issue a little bit. Obviously, the information available to Zuckbook is incredible here. What if the man and woman were in politics, or some position of influence. Could someone uses knowledge to manipulate government in a way that could affect us in general ?. Control a vote for example. This kind of OPSEC or operational security analysis are doing here can be applied to other apps as well. For example, the same risk occur when using apps like Signal and Telegram . . Basically, any app that uses a phone number as the main identifier, and collects contact lists, are all dangerous. Some of you think that the answer is to never upload a contact list. The problem is that it is not you that’s the question. Can you stop your friends or relative from uploading a contact list that you’re in ?. Facebook or Zuckbook has its own very dangerous flaw. And that, it forces you to interact on the internet without pseudo anonymity , yet without any sort of privacy. . It is very easy to retrieve information on Facebook about anyone. Even with the maximum so called privacy settings. Watch my video about how they do that if you have any doubt. So I hope you realize that certain types of data or metadata are more important than you think. . The lesson to be learned here is that pseudo anonymity is extremely important, because, in effect, it creates this information. This is why I have my own pseudo anonymous app Brax.Me. There is no phone number requirement. There is no email requirement. There is no real name requirement. It is super encrypted on top of that and it is open source. . I made this app because I realized that the major major flaws in all these platforms can destroy your privacy. Even though they claim to have encryption. I hope I’ve given you food for thought and subscribe to my channel for more thought-provoking topics on privacy thank you for watching. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/03/19/how-whatsapp-and-facebook-will-zuck-you.html",
            "relUrl": "/markdown/2020/03/19/how-whatsapp-and-facebook-will-zuck-you.html",
            "date": " • Mar 19, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Syncing a github fork.",
            "content": "Syncing a github fork. . Borrowed of https://github.com/BlockSigner/cove . Configure a remote for a fork . https://help.github.com/en/articles/configuring-a-remote-for-a-fork . open the Terminal | list the remote for your fork $ git remote -v . | specify a new remote upstream $ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git . | verify the new upstream $ git remote -v . | . Syncing the fork . from https://help.github.com/en/articles/syncing-a-fork . open the Terminal | change to your local project | fetch the branches from upstream $ git fetch upstream . | check out your fork’s local master branch $ git checkout master . | merge changes from usptream/master into master $ git merge upstream/master . | .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/03/15/syncing-a-github-fork.html",
            "relUrl": "/markdown/2020/03/15/syncing-a-github-fork.html",
            "date": " • Mar 15, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "De-googling Android Phones.",
            "content": "De-googling Android Phones. . Borrowed from: . . Can you de-google an Android phone? yes, you can, and I’ll show you a completely de-googled newer phone and then examine the choices I made to ensure privacy. Privacy choices can be impacted by what to choose to install on this phone. So this is not simple. Let’s get started. . For this exercise I’m using a Motorola Moto G7 play, which is a phone released in 2019. It’s made by Lenovo. The reason I chose this phone is that it’s fairly easy to get, it’s inexpensive, but with a surprisingly good build quality and performance. And in my personal use of it, I’m satisfied with it as a replacement to my ultra expensive iPhone, that I paid $1400 for. . I’ve said in my last video that I’m done what I found for $1400 at least they could have stopped their spying on me. But you get a double whammy high price and more spine. So yes a standard Moto G7 play ships with Android 9 and it’s also an extremely bad device if you use it as is due to Google spying as well but at least you can get around it this phone here is rooted it comes with Android 10 AOSP which is the Android Open Source Project and I customized it for privacy. . If you want to follow my process here you can certainly do this by yourself. Though this is probably not something that a non-technical person should do themselves. You will likely bricked your phone. It took me a while to get this going and I did hard brick the phone. Hard brick means you can’t even boot the device. It’s just a black screen. But I learned how to recover it, and now I’ve developed some expertise on this particular phone. . Let’s talk about AOSP first. When Google wants to release a new version of Android it first creates an open-source version of it called AOSP. This is the starting point of Android that is received by every phone OEM or one manufacturer, because it’s open-source Google doesn’t but any proprietary code in there. There’s absolutely no code that shows you how to connect to Google directly it doesn’t even have code for Wi-Fi scanning, which I mention is how it tracks your location every second. There’s no Google Playstore, and there are no Google services that is used by the apps so when you install a plane AOSP on a phone in reality it does very little but it can also do very little to spy on you for one thing there’s no Google login. So I have never logged into Google on this phone now in its final form. . I made some compromises that allow some limited Google telemetry on this. But at least a phone remains unidentified. And my home network is completely on a VPN by hardware routing, so I don’t have to worry about being tracked using an IP address at home. . Let me show you the actual phone so you can see what I’ve done first I modified the AOSP to have three particular services, which are very important. The most important is F-droid. F-droid is an open source repository of Android apps it is not associated with Google Play and the apps on it are not on Google Play. F-droid is one of the safest sources of apps for Android because of its strict free and open source requirement. . Now if I stopped here, these are the only apps I would install: DuckDuckGo for browsing a search new pipe which is a Youtube front-end so you don’t have to go to YouTube and a weather app called Forecastie. This is important to think about because weather apps are one of the biggest sources of spying so I wouldn’t trust any non open-source weather app. . Then I loaded Brax.Me since I made this app I can load it manually without any store now if you just stop here you’re in good shape no telemetry no tracking but also no notifications most of you want more features on your phone. . In fact if you wanted to stop here you’ll be even more secure with a Linux phone and install Linux apps but to get to the next stage you’ll need a couple more pieces to get the phone to install some apps that you commonly find in the Google Play Store. But you don’t want ever to install Google Play on here so you have to know the alternatives. . As you see here, I’ve installed two more apps on the phone that will allow us access to the major apps on Google Play. These are the Aurora Store and MicroG from the project MicroG. Both of these are open-source projects and what they will do is to allow us anonymous access to Google Play. So we can download many apps, get notifications and yet maintain no identity that is attached to the phone. There is still no Google login on this phone, in fact I will never login to Google at the device level. . I’m going to show you the apps I have so far that I’ve successfully installed on this phone without the use of Google Play. I have Yelp, Uber and Ways. Now in case you didn’t know, Waze is owned by Google, but this is the rare Google app that actually didn’t require Google Services, in fact, you can use Waze without ever logging in. So just turn on location when you’re using the app. This is probably that killer app that explains why the average person cannot survive with a Linux phone, but fortunately my car has navigation, so I don’t need to use this. But some of you need it and here we show you that it works and there’s the YouTube space location. . You cannot install Uber Driver app by the way, and Lyft does not work so that’s not an option without Google Play then here you can see I have Spotify, Periscope and Twitter since I have many followers on Periscope and Twitter the only real problem I found is that Periscope does not allow login by phone number on this otherwise it works fine including broadcasting, after I tweet the phone. . Email is always a problem and I have many videos on this. I could not find an open source email that worked with Gmail so here I installed Edison Mail this is not open source and you will likely get advertising so I have a special email I used only for this phone for other communications choices these work fine Telegram, Viber, Zoom, Signal and of course my app Brax.Me. . For financial transactions I installed PayPal, Venmo in Assam Bank I tried Bank of America. . For two-factor authentication I installed Authy, which works like the same as Google Authenticator. . So now this is a very functional phone for the average person there are many apps I wouldn’t recommend installing on here or I guarantee that that it will break your privacy. These are all app from Facebook, including Whatsapp, Instagram and Facebook Messenger. I have another video explaining their special techniques for spying on you. . There are other apps that are untrustworthy, like Tick-tock, Snapchat and I would not install any weather app that is not open source, as it will track your location and sell it. . There are no Google apps here. There is no YouTube, there is no Gmail ,no Google Maps. If you try to install them they won’t work without Google Play. . Now how does this all work without Google Play or any Google services on all the other apps I just showed you. I’m going to show you some of the internals of Aurora store and MicroG so you can see how it works Aurora Store actually gets the apps from Google Play but in order to maintain privacy it does it by spoofing your phone’s ID and you can see here where the spoofing is set. . I turn on all the spoofing options and even my Gmail is spoofed this means that your actual app loads are up to date versions from the actual Google Play Store. . But it’s not enough some apps require Google Services like Google Maps API and notifications. . So the other trick is to install MicroG. MicroG is a Google Services spoofer, it makes apps think that they’re talking to Google but they’re actually being routed externally, through the MicroG Services. MicroG can even spoof the geolocation services. . Here are some of the settings that are available on MicroG so you can see how the spoofing is done here. There’s an option to add a Google account for that trouble some app that keeps asking you. But I’m not going to do that because it defeats the purpose of this phone I enabled Google device registration because this sets up a unique identifier for notifications. Notifications themselves are controlled by Google Cloud messaging which is enable here as well. Meaning MicroG wills poof it, and that’s all I allowed and this should at least ensure that notifications work for the apps I have installed. . So I’ve got a nicely functional phone here with some compromises, each time you use any app that uses a Google Service, some indirect pinging of Google will occur although your phone itself is not specifically identified, and the traffic is routed through the Aurora and microG Services. . That should stop specific identification of a phone. Also many apps require you to login, so if you’re not on a VPN those apps may get your IP address and your location. . However they should have a problem retrieving more information, such as your Google ID. Though you still have individual app login there will be no common thread linking the apps to you, since there’s no common Google ID identifier. . For most users I would say this is a good privacy phone and as long as you’re careful not to install dangerous apps, like Facebook apps, then it should be good. I’ve the apps that I show here I would really be careful about what apps you choose in general. . Now some will ask if this can be done on a Samsung Galaxy or some other phone model the answer is this if you’re an expert look for phone supported by the LineageOS project and install it without GAPS, Google apps. And then you can modify the phone as I’ve done here. You’ll find though that very few new phones are supported by LineageOS they mostly have older phones on their supported list. So certain AOSP providers have focused on newer models of specific phones. For example a good AOSP is eFoundation which will sell you a phone already configured and they only do Samsung Galaxys. . So if I wanted to do this to a Samsung Galaxy I would go to eFoundation. If you want to use the Google Pixel then you may want to use Graphene OS which should be a fine AOSP choice for that I myself will preconfigure Moto G7 and Moto G7 Play phones which are less expensive and practically new so if you want those I have those in my store on Brax.Me. And fortunately I can get enough supply of these. I will refer to my customization as Brax ROM and I installed in each OS on the Moto G7 and modified the LineageOS in the same way I do with the Play. . This does not mean that I preferred these over Linux phones. I still have my PinePhone and a Nexus 5 running Ubuntu Touch. But sometimes we are reliant on these phones and some apps become essential for specific purposes. Like if I have to broadcast on Periscope I need access to the Periscope app, so I simply move the SIM card around as needed to whatever phone I need for the purpose. . I hope this helps and provide some guidance. I’ve tried to give people a range of choices for decision-making that are still privacy focus phones are still dangerous PI devices so at all times you may still need to remove that SIM card. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/03/15/de-googling-android.html",
            "relUrl": "/markdown/2020/03/15/de-googling-android.html",
            "date": " • Mar 15, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "Phone Tracking Threads.",
            "content": "Phone Tracking Threads. . Borrowed from: . . Number one threat: Wi-Fi scanning. . This is a very specific thing done by both Apple and Google to look for routers and their GPS locations. They then add every Wi-Fi router. They find into their database with a corresponding location. This information is the basis of Wi-Fi triangulation which I’ll talk about later and it’s used to find everyone’s exact location within six feet. Wi-Fi triangulation is the problem with this little feature Wi-Fi scanning is that in effect Google and Apple always know where you are since you are constantly stating to home base which Wi-Fi routers are near you now. Wi-Fi triangulation requires your permission to share it to third parties. But I want to clearly distinguish this from Wi-Fi scanning, which is the probe going out every second to look for existing Wi-Fi routers. I can tell you right now that there is no way to disable Wi-Fi scanning on iOS. In fact, as far as I know, the software is embedded in the Qualcomm chip firmware. This is not affected by your location permission settings, so Apple is able to tell your location habits, and in fact, it uses this to tell you: “you are five minutes from your destination”, without telling it your destination. It’s based on collected habits, and this is a supposed privacy phone. What a lie. So Apple knows where everyone is. This is true of any Apple device like an iPad ,iTouch or even a Mac being upfront with you. I would just leave my iOS device at home because it guarantees this Apple tracking. Find My Phone is very effective though you can block other people from seeing your location, and Find My Phone you cannot block Apple. . Now Google has Wi-Fi scanning too, in fact they invented it, so they’re the original worst offenders. But in newer versions of Android you can actually go to network settings and disable Wi-Fi scanning. So Wi-Fi scanning will stop Google, in theory, from tracking your every move like Apple. This doesn’t stop Google from collecting info on Wi-Fi routers, since that information is crowd-sourced. Though you may turn it off for yourself or your family, the mailman and the UPS delivery guy will collect that information from phones in their pocket. But it does stop Google from knowing where you are specifically if location permissions are turned off, which require Wi-Fi triangulation. . Here’s an interesting fact, Wi-Fi scanning does not exist in the Android Open Source Project or AOSP perhaps. They didn’t want to share the source code of how they scan for networks and send that information to Google. So clearly custom roms don’t have this issue. AOSP still has Wi-Fi triangulation, but again that is controlled by permissions. . Number two threat: Your Apple ID and Google ID. . And this is a big one. The first thing you’re required to do when you get your iOS device or your Google Android is to enter your ID. This is an email address on Google it’s a gmail account if you ever purchase any apps or do any in-app purchases, you will typically attach a credit card to this email. You buy subscriptions with it use it in itunes, and if you have Apple card then you pretty much attach at everything you do financially. So there is absolutely no anonymity with your ID at all. In the case of Google not only do they have your financial info, they also scan your email content, and this may also be attached to your YouTube activity, Google search, ways, so the tracking is horrendous. This is the number one thing I want to eliminate from a phone. The phone is basically an ID card meaning you’re chipped and any information tracked on the phone can be indexed by your real identity. I will tell you right now that there is no way to avoid this on iOS, so I’m giving up. An app on Google Android, this is also impossible, but it can be done, depending on how you set up an Android AOSP device. . Number three threat: IP address tracking. . IP address tracking is a very basic concern because of index to your real identity with a Google ID or Apple ID, then someone can see everything that you do on the internet. Especially with an Apple and Google this is very disturbing obviously, but I want to distinguish the different risks your home IP address is provided by your DSL carrier is the most dangerous to reveal, because it is unique to you, and typically this doesn’t change. It’s otherwise known as a static IP address. It’s not usually static in principle, but in reality that’s how it behaves. I want to contrast that to your activities while unsell data if you’re up and about your IP address will change depending on the cell tower, and your IP address on the go is transient, so you may have many IP addresses while on cell data this means that third parties will be unable to match an exact identity to the IP address. However the IP address you’re signed at any given moment is known by your cell carrier. But it’s not information that’s usually shared, unless asked for by law enforcement, and I don’t think this is the type of data they would normally sell, because there are too many changing values they can probably sell info on your internet traffic with your name directly, without using an IP address. But that’s a different story. In any case, at least this, is easily stopped have a VPN, especially at your home if a VPN is on that Apple and Google will in theory be blocked from knowing your real IP address. I say in theory, because if you’re using VPN software directly on the phone then the operating system can still know what the real IP address is, so the best solution is to have a VPN router, so the VPN is not in the software embedded on iOS and Android. I have videos on VPN routers, and this is an important part of your home security solution when you’re on the road a VPN will stop your carrier from knowing your info, and for that you need to use the installed VPN software on your phone. But even if you didn’t use it on road, Apple and Google will not know who you are. So even if you don’t use a VPN on the road a lot of detracting by third parties is not useful. . Number four threat: Wi-Fi triangulation. . I mentioned Wi-Fi triangulation at the beginning, and this has to be clearly delineated Wi-Fi triangulation is the exact positioning used based on the signal strength of the Wi-Fi routers now you this can accurately position you within six feet even if there’s no GPS signal like if you’re indoors. The good news about Wi-Fi triangulation is that it is controlled by permissions, meaning you can switch it off based on your location settings Wi-Fi triangulation is about sharing your location to third parties, meaning not Apple and Google. So if you turn location off, this will not be shared with others. The only complication with this is that iOS actually split the location permissions, so that it can give apps different permissions than the advertising that’s in the apps. So if not set right, you could end up with location still on for advertisers which is the default. I had a video from early last year that discussed the settings though it probably changed a little bit in newer iOS versions and without testing it’s hard to know if your app location settings override the advertising location settings. This confusing set up does not exist on Android, so there is pretty black and white, you review each app and all the permissions and fortunately this has become a lot easier to do on new versions of Android. The Wi-Fi triangulation issue exists on all Android and iOS even AOSP, so this means you still have to meticulously examine the location permissions for each app at all times in closed apps you’re not using if they have location permissions. . Number five threat: Cell carrier tracking. . Now this is impossible to evade with a standard cell phone. No cell phone is immune from your cell carrier tracking your location, and I have another video explaining all this tracking and possible hacks to your phone. Fortunately I perceive this more as a government threat and that’s not something the average person concerns themselves with usually. But it can be an occasional legit concern, like when attending protests and such, and for journalists. So the solution is simple if you’re doing something that you’d rather not have your government track you, turn off your phone completely or remove the SIM card, and that should be good enough for the occasional squashing of this threat. So what’s the clear solution to all this? Clearly several threats have no solution if you’re stuck to iOS and your Google Android. So you’ll have to give those up or leave the devices at home. The top solution is plainly a Linux phone and I mean get new Linux and not an Android. .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/03/14/phone-tracking-threads.html",
            "relUrl": "/markdown/2020/03/14/phone-tracking-threads.html",
            "date": " • Mar 14, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "28 Jupyter Notebook Tips, Tricks, and Shortcuts",
            "content": "28 Jupyter Notebook Tips, Tricks, and Shortcuts . Borrowed from https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/ . . The Jupyter interface. . Project Jupyter was born out of the IPython project as the project evolved to become a notebook that could support multiple languages – hence its historical name as the IPython notebook. The name Jupyter is an indirect acronyum of the three core languages it was designed for: JUlia, PYThon, and R and is inspired by the planet Jupiter. . When working with Python in Jupyter, the IPython kernel is used, which gives us some handy access to IPython features from within our Jupyter notebooks (more on that later!) . We’re going to show you 28 tips and tricks to make your life working with Jupyter easier. . 1. Keyboard Shortcuts . As any power user knows, keyboard shortcuts will save you lots of time. Jupyter stores a list of keybord shortcuts under the menu at the top: Help &gt; Keyboard Shortcuts, or by pressing H in command mode (more on that later). It’s worth checking this each time you update Jupyter, as more shortcuts are added all the time. . Another way to access keyboard shortcuts, and a handy way to learn them is to use the command palette: Cmd + Shift + P (or Ctrl + Shift + P on Linux and Windows). This dialog box helps you run any command by name – useful if you don’t know the keyboard shortcut for an action or if what you want to do does not have a keyboard shortcut. The functionality is similar to Spotlight search on a Mac, and once you start using it you’ll wonder how you lived without it! . . The command palette. . Some of my favorites: . Esc will take you into command mode where you can navigate around your notebook with arrow keys. | While in command mode: A to insert a new cell above the current cell, B to insert a new cell below. | M to change the current cell to Markdown, Y to change it back to code | D + D (press the key twice) to delete the current cell | . | Enter will take you from command mode back into edit mode for the given cell. | Shift + Tab will show you the Docstring (documentation) for the the object you have just typed in a code cell – you can keep pressing this short cut to cycle through a few modes of documentation. | Ctrl + Shift + - will split the current cell into two from where your cursor is. | Esc + F Find and replace on your code but not the outputs. | Esc + O Toggle cell output. | Select Multiple Cells: Shift + J or Shift + Down selects the next sell in a downwards direction. You can also select sells in an upwards direction by using Shift + K or Shift + Up. | Once cells are selected, you can then delete / copy / cut / paste / run them as a batch. This is helpful when you need to move parts of a notebook. | You can also use Shift + M to merge multiple cells. | . | . . Merging multiple cells. . 2. Pretty Display of Variables . The first part of this is pretty widely known. By finishing a Jupyter cell with the name of a variable or unassigned output of a statement, Jupyter will display that variable without the need for a print statement. This is especially useful when dealing with Pandas DataFrames, as the output is neatly formatted into a table. . What is known less, is that you can alter a modify the ast_note_interactivity kernel option to make jupyter do this for any variable or statement on it’s own line, so you can see the value of multiple statements at once. . from IPython.core.interactiveshell import InteractiveShell InteractiveShell.ast_node_interactivity = &quot;all&quot; from pydataset import data quakes = data(&#39;quakes&#39;) quakes.head() quakes.tail() .   lat long depth mag stations . 1 | -20.42 | 181.62 | 562 | 4.8 | 41 | . 2 | -20.62 | 181.03 | 650 | 4.2 | 15 | . 3 | -26.00 | 184.10 | 42 | 5.4 | 43 | . 4 | -17.97 | 181.66 | 626 | 4.1 | 19 | . 5 | -20.42 | 181.96 | 649 | 4.0 | 11 | .   lat long depth mag stations . 996 | -25.93 | 179.54 | 470 | 4.4 | 22 | . 997 | -12.28 | 167.06 | 248 | 4.7 | 35 | . 998 | -20.13 | 184.20 | 244 | 4.5 | 34 | . 999 | -17.40 | 187.80 | 40 | 4.5 | 14 | . 1000 | -21.59 | 170.56 | 165 | 6.0 | 119 | . If you want to set this behaviour for all instances of Jupyter (Notebook and Console), simply create a file ~/.ipython/profile_default/ipython_config.py with the lines below. . c = get_config() # Run all nodes interactively c.InteractiveShell.ast_node_interactivity = &quot;all&quot; . 3. Easy links to documentation . Inside the Help menu you’ll find handy links to the online documentation for common libraries including NumPy, Pandas, SciPy and Matplotlib. . Don’t forget also that by prepending a library, method or variable with ?, you can access the Docstring for quick reference on syntax. . ?str.replace() Docstring: S.replace(old, new[, count]) -&gt; str Return a copy of S with all occurrences of substringold replaced by new. If the optional argument count isgiven, only the first count occurrences are replaced. Type: method_descriptor . 4. Plotting in notebooks . There are many options for generating plots in your notebooks. . matplotlib (the de-facto standard), activated with %matplotlib inline – Here’s a Dataquest Matplotlib Tutorial. | %matplotlib notebook provides interactivity but can be a little slow, since rendering is done server-side. | Seaborn is built over Matplotlib and makes building more attractive plots easier. Just by importing Seaborn, your matplotlib plots are made ‘prettier’ without any code modification. | mpld3 provides alternative renderer (using d3) for matplotlib code. Quite nice, though incomplete. | bokeh is a better option for building interactive plots. | plot.ly can generate nice plots – this used to be a paid service only but was recently open sourced. | Altair is a relatively new declarative visualization library for Python. It’s easy to use and makes great looking plots, however the ability to customize those plots is not nearly as powerful as in Matplotlib. | . . The Jupyter interface. . 5. IPython Magic Commands . The %matplotlib inline you saw above was an example of a IPython Magic command. Being based on the IPython kernel, Jupyter has access to all the Magics from the IPython kernel, and they can make your life a lot easier! . # This will list all magic commands%lsmagic Available line magics: %alias %alias_magic %autocall %automagic %autosave %bookmark %cat %cd %clear %colors %config %connect_info %cp %debug %dhist %dirs %doctest_mode %ed %edit %env %gui %hist %history %killbgscripts %ldir %less %lf %lk %ll %load %load_ext %loadpy %logoff %logon %logstart %logstate %logstop %ls %lsmagic %lx %macro %magic %man %matplotlib %mkdir %more %mv %notebook %page %pastebin %pdb %pdef %pdoc %pfile %pinfo %pinfo2 %popd %pprint %precision %profile %prun %psearch %psource %pushd %pwd %pycat %pylab %qtconsole %quickref %recall %rehashx %reload_ext %rep %rerun %reset %reset_selective %rm %rmdir %run %save %sc %set_env %store %sx %system %tb %time %timeit %unalias %unload_ext %who %who_ls %whos %xdel %xmode Available cell magics:%%! %%HTML %%SVG %%bash %%capture %%debug %%file %%html %%javascript %%js %%latex %%perl %%prun %%pypy %%python %%python2 %%python3 %%ruby %%script %%sh %%svg %%sx %%system %%time %%timeit %%writefile Automagic is ON, % prefix IS NOT needed for line magics. . I recommend browsing the documentation for all IPython Magic commands as you’ll no doubt find some that work for you. A few of my favorites are below: . 6. IPython Magic – %env: Set Environment Variables . You can manage environment variables of your notebook without restarting the jupyter server process. Some libraries (like theano) use environment variables to control behavior, %env is the most convenient way. . # Running %env without any arguments # lists all environment variables # The line below sets the environment # variable %env OMP_NUM_THREADS%env OMP_NUM_THREADS=4 env: OMP_NUM_THREADS=4 . 7. IPython Magic – %run: Execute python code . %run can execute python code from .py files – this is well-documented behavior. Lesser known is the fact that it can also execute other jupyter notebooks, which can quite useful. . Note that using %run is not the same as importing a python module. . # this will execute and show the output from # all code cells of the specified notebook %run ./two-histograms.ipynb . . 8. IPython Magic – %load: Insert the code from an external script . This will replace the contents of the cell with an external script. You can either use a file on your computer as a source, or alternatively a URL. . # Before Running %load ./hello_world.py # After Running # %load ./hello_world.py if __name__ == &quot;__main__&quot;: print(&quot;Hello World!&quot;) Hello World! . 9. IPython Magic – %store: Pass variables between notebooks. . The %store command lets you pass variables between two different notebooks. . data = &#39;this is the string I want to pass to different notebook&#39; %store data del data # This has deleted the variable Stored &#39;data&#39; (str) . Now, in a new notebook… . %store -r data print(data) this is the string I want to pass to different notebook . 10. IPython Magic – %who: List all variables of global scope. . The %who command without any arguments will list all variables that existing in the global scope. Passing a parameter like str will list only variables of that type. . one = &quot;for the money&quot; two = &quot;for the show&quot; three = &quot;to get ready now go cat go&quot; %who str one three two . 11. IPython Magic – Timing . There are two IPython Magic commands that are useful for timing – %%time and %timeit. These are especially handy when you have some slow code and you’re trying to indentify where the issue is. . %%time will give you information about a single run of the code in your cell. . %%time import time for _ in range(1000): time.sleep(0.01) # sleep for 0.01 seconds CPU times: user 21.5 ms, sys: 14.8 ms, total: 36.3 ms Wall time: 11.6 s . %%timeit uses the Python timeit module which runs a statement 100,000 times (by default) and then provides the mean of the fastest three times. . import numpy %timeit numpy.random.normal(size=100) The slowest run took 7.29 times longer than the fastest. This could mean that an intermediate result is being cached. 100000 loops, best of 3: 5.5 µs per loop . 12. IPython Magic – %%writefile and %pycat: Export the contents of a cell/Show the contents of an external script . Using the %%writefile magic saves the contents of that cell to an external file. %pycat does the opposite, and shows you (in a popup) the syntax highlighted contents of an external file. . %%writefile pythoncode.py import numpy def append_if_not_exists(arr, x): if x not in arr: arr.append(x) def some_useless_slow_function(): arr = list() for i in range(10000): x = numpy.random.randint(0, 10000) append_if_not_exists(arr, x) Writing pythoncode.py %pycat pythoncode.py import numpy def append_if_not_exists(arr, x): if x not in arr: arr.append(x) def some_useless_slow_function(): arr = list() for i in range(10000): x = numpy.random.randint(0, 10000) append_if_not_exists(arr, x) . ### 13. IPython Magic – %prun: Show how much time your program spent in each function.Using %prun statement_name will give you an ordered table showing you the number of times each internal function was called within the statement, the time each call took as well as the cumulative time of all runs of the function. . %prun some_useless_slow_function() 26324 function calls in 0.556 seconds Ordered by: internal time ncalls tottime percall cumtime percall filename:lineno(function) 10000 0.527 0.000 0.528 0.000 :2(append_if_not_exists) 10000 0.022 0.000 0.022 0.000 {method &#39;randint&#39; of &#39;mtrand.RandomState&#39; objects} 1 0.006 0.006 0.556 0.556 :6(some_useless_slow_function) 6320 0.001 0.000 0.001 0.000 {method &#39;append&#39; of &#39;list&#39; objects} 1 0.000 0.000 0.556 0.556 :1() 1 0.000 0.000 0.556 0.556 {built-in method exec} 1 0.000 0.000 0.000 0.000 {method &#39;disable&#39; of &#39;_lsprof.Profiler&#39; objects} . 14. IPython Magic – Debugging with %pdb . Jupyter has own interface for The Python Debugger (pdb). This makes it possible to go inside the function and investigate what happens there. . You can view a list of accepted commands for pdb here. . %pdb def pick_and_take(): picked = numpy.random.randint(0, 1000) raise NotImplementedError() pick_and_take() Automatic pdb calling has been turned ON -- NotImplementedError Traceback (most recent call last) in () 5 raise NotImplementedError() 6 -&gt; 7 pick_and_take() in pick_and_take() 3 def pick_and_take(): 4 picked = numpy.random.randint(0, 1000) -&gt; 5 raise NotImplementedError() 6 7 pick_and_take() NotImplementedError: &gt; (5)pick_and_take() 3 def pick_and_take(): 4 picked = numpy.random.randint(0, 1000) -&gt; 5 raise NotImplementedError() 6 7 pick_and_take() ipdb&gt; . 15. IPython Magic – High-resolution plot outputs for Retina notebooks . One line of IPython magic will give you double resolution plot output for Retina screens, such as the more recent Macbooks. Note: the example below won’t render on non-retina screens . x = range(1000) y = [i ** 2 for i in x] plt.plot(x,y) plt.show(); %config InlineBackend.figure_format =&#39;retina&#39; plt.plot(x,y) plt.show(); . . . 16. Suppress the output of a final function. . Sometimes it’s handy to suppress the output of the function on a final line, for instance when plotting. To do this, you just add a semicolon at the end. . %matplotlib inline from matplotlib import pyplot as plt import numpyx = numpy.linspace(0, 1, 1000)**1.5 # Here you get the output of the function plt.hist(x) (array([ 216., 126., 106., 95., 87., 81., 77., 73., 71., 68.]), array([ 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]), &lt;a list of 10 Patch objects&gt;) # By adding a semicolon at the end, the output is suppressed.plt.hist(x); . . . 17. Executing Shell Commands . It’s easy to execute a shell command from inside your notebook. You can use this to check what datasets are in available in your working folder: . !ls *.csv nba_2016.csv titanic.csv pixar_movies.csv whitehouse_employees.csv . Or to check and manage packages. . !pip install numpy !pip list | grep pandas Requirement already satisfied (use --upgrade to upgrade): numpy in /Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages pandas (0.18.1) . 18. Using LaTeX for forumlas . When you write LaTeX in a Markdown cell, it will be rendered as a formula using MathJax. . This: . $P(A mid B) = frac{P(B mid A)P(A)}{P(B)}$ . Becomes this: . P(A | B)=P(B | A)P(A)P(B) | . Markdown is an important part of notebooks, so don’t forget to use its expressiveness! . 19. Run code from a different kernel in a notebook . If you want to, you can combine code from multiple kernels into one notebook. . Just use IPython Magics with the name of your kernel at the start of each cell that you want to use that Kernel for: . %%bash | %%HTML | %%python2 | %%python3 | %%ruby | %%perl | . %%bash for i in {1..5} do echo &quot;i is $i&quot; done i is 1 i is 2 i is 3 i is 4 i is 5 . 20. Install other kernels for Jupyter . One of the nice features about Jupyter is ability to run kernels for different languages. As an example, here is how to get and R kernel running. . Easy Option: Installing the R Kernel Using Anaconda . If you used Anaconda to set up your environment, getting R working is extremely easy. Just run the below in your terminal: . conda install -c r r-essentials . Less Easy Option: Installing the R Kernel Manually . If you are not using Anaconda, the process is a little more complex. Firstly, you’ll need to install R from CRAN if you haven’t already. . Once that’s done, fire up an R console and run the following: . install.packages(c(&#39;repr&#39;, &#39;IRdisplay&#39;, &#39;crayon&#39;, &#39;pbdZMQ&#39;, &#39;devtools&#39;)) devtools::install_github(&#39;IRkernel/IRkernel&#39;) IRkernel::installspec() # to register the kernel in the current R installation . 21. Running R and Python in the same notebook. . The best solution to this is to install rpy2 (requires a working version of R as well), which can be easily done with pip: . pip install rpy2 . You can then use the two languages together, and even pass variables inbetween: . %load_ext rpy2.ipython %R require(ggplot2) array([1], dtype=int32) import pandas as pd df = pd.DataFrame({ &#39;Letter&#39;: [&#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;b&#39;, &#39;b&#39;, &#39;b&#39;, &#39;c&#39;, &#39;c&#39;, &#39;c&#39;], &#39;X&#39;: [4, 3, 5, 2, 1, 7, 7, 5, 9], &#39;Y&#39;: [0, 4, 3, 6, 7, 10, 11, 9, 13], &#39;Z&#39;: [1, 2, 3, 1, 2, 3, 1, 2, 3] }) %%R -i df ggplot(data = df) + geom_point(aes(x = X, y= Y, color = Letter, size = Z)) . . Example courtesy Revolutions Blog . 22. Writing functions in other languages . Sometimes the speed of numpy is not enough and I need to write some fast code. In principle, you can compile function in the dynamic library and write python wrappers… . But it is much better when this boring part is done for you, right? . You can write functions in cython or fortran and use those directly from python code. . First you’ll need to install: . !pip install cython fortran-magic %load_ext Cython %%cython def myltiply_by_2(float x): return 2.0 * x myltiply_by_2(23.) . Personally I prefer to use fortran, which I found very convenient for writing number-crunching functions. More details of usage can be found here. . %load_ext fortranmagic %%fortran subroutine compute_fortran(x, y, z) real, intent(in) :: x(:), y(:) real, intent(out) :: z(size(x, 1)) z = sin(x + y) end subroutine compute_fortran compute_fortran([1, 2, 3], [4, 5, 6]) . There are also different jitter systems which can speed up your python code. More examples can be found here. . 23. Multicursor support . Jupyter supports mutiple cursors, similar to Sublime Text. Simply click and drag your mouse while holding down Alt. . . Multicursor support. . 24. Jupyter-contrib extensions . Jupyter-contrib extensions is a family of extensions which give Jupyter a lot more functionality, including e.g. jupyter spell-checker and code-formatter. . The following commands will install the extensions, as well as a menu based configurator that will help you browse and enable the extensions from the main Jupyter notebook screen. . !pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master !pip install jupyter_nbextensions_configurator !jupyter contrib nbextension install --user !jupyter nbextensions_configurator enable --user . . The nbextension configurator. . 25. Create a presentation from a Jupyter notebook. . Damian Avila’s RISE allows you to create a powerpoint style presentation from an existing notebook. . You can install RISE using conda: . conda install -c damianavila82 rise . Or alternatively pip: . pip install RISE . And then run the following code to install and enable the extension: . jupyter-nbextension install rise --py --sys-prefix jupyter-nbextension enable rise --py --sys-prefix . 26. The Jupyter output system . Notebooks are displayed as HTML and the cell output can be HTML, so you can return virtually anything: video/audio/images. . In this example I scan the folder with images in my repository and show thumbnails of the first 5: . import os from IPython.display import display, Image names = [f for f in os.listdir(&#39;../images/ml_demonstrations/&#39;) if f.endswith(&#39;.png&#39;)] for name in names[:5]: display(Image(&#39;../images/ml_demonstrations/&#39; + name, width=100)) . . . . . . We can create the same list with a bash command, because magics and bash calls return python variables: . names = !ls ../images/ml_demonstrations/*.png names[:5] [&#39;../images/ml_demonstrations/colah_embeddings.png&#39;, &#39;../images/ml_demonstrations/convnetjs.png&#39;, &#39;../images/ml_demonstrations/decision_tree.png&#39;, &#39;../images/ml_demonstrations/decision_tree_in_course.png&#39;, &#39;../images/ml_demonstrations/dream_mnist.png&#39;] . 27. ‘Big data’ analysis . A number of solutions are available for querying/processing large data samples: . ipyparallel (formerly ipython cluster) is a good option for simple map-reduce operations in python. We use it in rep to train many machine learning models in parallel | pyspark | spark-sql magic %%sql | . 28. Sharing notebooks . The easiest way to share your notebook is simply using the notebook file (.ipynb), but for those who don’t use Jupyter, you have a few options: . Convert notebooks to html file using the File &gt; Download as &gt; HTML Menu option. . | Share your notebook file with . gists . or on github, both of which render the notebooks. See . this example . . . If you upload your notebook to a github repository, you can use the handy mybinder service to allow someone half an hour of interactive Jupyter access to your repository. | . | Setup your own system with jupyterhub, this is very handy when you organize mini-course or workshop and don’t have time to care about students machines. . | Store your notebook e.g. in dropbox and put the link to nbviewer. nbviewer will render the notebook from whichever source you host it. . | Use the File &gt; Download as &gt; PDF menu to save your notebook as a PDF. If you’re going this route, I highly recommend reading Julius Schulz’s excellent article Making publication ready Python notebooks. . | Create a blog using Pelican from your Jupyter notebooks. . | .",
            "url": "https://op07n.github.io/fastpages/markdown/2020/02/21/Jupyter-Notebook-Tips,-Tricks,-and-Shortcuts.html",
            "relUrl": "/markdown/2020/02/21/Jupyter-Notebook-Tips,-Tricks,-and-Shortcuts.html",
            "date": " • Feb 21, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://op07n.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://op07n.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://op07n.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}